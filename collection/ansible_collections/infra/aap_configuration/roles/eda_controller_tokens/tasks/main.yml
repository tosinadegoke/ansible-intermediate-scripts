---
# Create EDA Controller Tokens
- name: Add EDA Controller token
  ansible.eda.controller_token:
    name: "{{ __token_item.name }}"
    description: "{{ __token_item.description | default(omit) }}"
    token: "{{ __token_item.token | default(omit) }}"
    controller_host: "{{ aap_hostname | default(omit, true) }}"
    controller_username: "{{ aap_username | default(omit, true) }}"
    controller_password: "{{ aap_password | default(omit, true) }}"
    request_timeout: "{{ aap_request_timeout | default(omit, true) }}"
    validate_certs: "{{ aap_validate_certs | default(omit) }}"
  loop: "{{ eda_controller_tokens }}"
  loop_control:
    loop_var: __token_item
    label: "{{ __operation.verb }} the Controller token {{ __token_item.name }} to EDA"
    pause: "{{ eda_configuration_users_token_async_delay }}"
  no_log: "{{ eda_configuration_users_token_secure_logging }}"
  async: 1000
  poll: 0
  register: __controller_tokens_job_async
  changed_when: not __controller_tokens_job_async.changed
  vars:
    __operation: "{{ operation_translate[__controller_tokens_job_async.state | default(platform_state) | default('present')] }}"

    ansible_async_dir: "{{ aap_configuration_async_dir }}"

- name: Create controller_token | Wait for finish the controller_token creation
  ansible.builtin.async_status:
    jid: "{{ __controller_tokens_job_async_result_item.ansible_job_id }}"
  register: __controller_tokens_job_async_result
  until: __controller_tokens_job_async_result.finished
  retries: "{{ eda_configuration_users_token_async_retries }}"
  delay: "{{ eda_configuration_users_token_async_delay }}"
  loop: "{{ __controller_tokens_job_async.results }}"
  loop_control:
    loop_var: __controller_tokens_job_async_result_item
    label: "{{ __operation.verb }} Controller token {{ __controller_tokens_job_async_result_item.__token_item.name }} | Wait for finish the Controller token {{ __operation.action }}"
  when: __controller_tokens_job_async_result_item.ansible_job_id is defined
  no_log: "{{ eda_configuration_users_token_secure_logging }}"
  vars:
    __operation: "{{ operation_translate[__controller_tokens_job_async_result_item.__controller_user_accounts_item.state | default(platform_state) | default('present')] }}"
    ansible_async_dir: "{{ aap_configuration_async_dir }}"
...
